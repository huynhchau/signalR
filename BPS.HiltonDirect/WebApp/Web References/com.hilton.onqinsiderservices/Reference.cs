//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BPS.HiltonDirect.WebApp.com.hilton.onqinsiderservices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="clsPortalSecurityServiceSoap", Namespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService")]
    public partial class clsPortalSecurityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateSessionWithSessionDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SessionGetValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SessionSetValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback HotelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSelectedHotelOperationCompleted;
        
        private System.Threading.SendOrPostCallback HotelListAllStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HotelIsValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupHotelListOperationCompleted;
        
        private System.Threading.SendOrPostCallback BrandMgtTypeCombinationsByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecAppListOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyAppAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllUsersByTaskIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public clsPortalSecurityService() {
            this.Url = global::BPS.HiltonDirect.WebApp.Properties.Settings.Default.BPS_HiltonDirect_WebApp_com_hilton_onqinsiderservices_clsPortalSecurityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateSessionWithSessionDataCompletedEventHandler CreateSessionWithSessionDataCompleted;
        
        /// <remarks/>
        public event SessionGetValueCompletedEventHandler SessionGetValueCompleted;
        
        /// <remarks/>
        public event SessionSetValueCompletedEventHandler SessionSetValueCompleted;
        
        /// <remarks/>
        public event HotelListCompletedEventHandler HotelListCompleted;
        
        /// <remarks/>
        public event GetSelectedHotelCompletedEventHandler GetSelectedHotelCompleted;
        
        /// <remarks/>
        public event HotelListAllStatusesCompletedEventHandler HotelListAllStatusesCompleted;
        
        /// <remarks/>
        public event HotelIsValidCompletedEventHandler HotelIsValidCompleted;
        
        /// <remarks/>
        public event GroupListCompletedEventHandler GroupListCompleted;
        
        /// <remarks/>
        public event GroupHotelListCompletedEventHandler GroupHotelListCompleted;
        
        /// <remarks/>
        public event BrandMgtTypeCombinationsByUserCompletedEventHandler BrandMgtTypeCombinationsByUserCompleted;
        
        /// <remarks/>
        public event GetSecAppListCompletedEventHandler GetSecAppListCompleted;
        
        /// <remarks/>
        public event VerifyAppAccessCompletedEventHandler VerifyAppAccessCompleted;
        
        /// <remarks/>
        public event AllUsersByTaskIdCompletedEventHandler AllUsersByTaskIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/CreateSessionWit" +
            "hSessionData", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateSessionWithSessionData(string astrUserName) {
            object[] results = this.Invoke("CreateSessionWithSessionData", new object[] {
                        astrUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSessionWithSessionDataAsync(string astrUserName) {
            this.CreateSessionWithSessionDataAsync(astrUserName, null);
        }
        
        /// <remarks/>
        public void CreateSessionWithSessionDataAsync(string astrUserName, object userState) {
            if ((this.CreateSessionWithSessionDataOperationCompleted == null)) {
                this.CreateSessionWithSessionDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSessionWithSessionDataOperationCompleted);
            }
            this.InvokeAsync("CreateSessionWithSessionData", new object[] {
                        astrUserName}, this.CreateSessionWithSessionDataOperationCompleted, userState);
        }
        
        private void OnCreateSessionWithSessionDataOperationCompleted(object arg) {
            if ((this.CreateSessionWithSessionDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSessionWithSessionDataCompleted(this, new CreateSessionWithSessionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/SessionGetValue", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SessionGetValue(string astrSessionID, string astrValueName) {
            object[] results = this.Invoke("SessionGetValue", new object[] {
                        astrSessionID,
                        astrValueName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SessionGetValueAsync(string astrSessionID, string astrValueName) {
            this.SessionGetValueAsync(astrSessionID, astrValueName, null);
        }
        
        /// <remarks/>
        public void SessionGetValueAsync(string astrSessionID, string astrValueName, object userState) {
            if ((this.SessionGetValueOperationCompleted == null)) {
                this.SessionGetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSessionGetValueOperationCompleted);
            }
            this.InvokeAsync("SessionGetValue", new object[] {
                        astrSessionID,
                        astrValueName}, this.SessionGetValueOperationCompleted, userState);
        }
        
        private void OnSessionGetValueOperationCompleted(object arg) {
            if ((this.SessionGetValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SessionGetValueCompleted(this, new SessionGetValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/SessionSetValue", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object SessionSetValue(string astrSessionID, int aintApplicationScopeID, string astrName, string astrValue) {
            object[] results = this.Invoke("SessionSetValue", new object[] {
                        astrSessionID,
                        aintApplicationScopeID,
                        astrName,
                        astrValue});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void SessionSetValueAsync(string astrSessionID, int aintApplicationScopeID, string astrName, string astrValue) {
            this.SessionSetValueAsync(astrSessionID, aintApplicationScopeID, astrName, astrValue, null);
        }
        
        /// <remarks/>
        public void SessionSetValueAsync(string astrSessionID, int aintApplicationScopeID, string astrName, string astrValue, object userState) {
            if ((this.SessionSetValueOperationCompleted == null)) {
                this.SessionSetValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSessionSetValueOperationCompleted);
            }
            this.InvokeAsync("SessionSetValue", new object[] {
                        astrSessionID,
                        aintApplicationScopeID,
                        astrName,
                        astrValue}, this.SessionSetValueOperationCompleted, userState);
        }
        
        private void OnSessionSetValueOperationCompleted(object arg) {
            if ((this.SessionSetValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SessionSetValueCompleted(this, new SessionSetValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/HotelList", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet HotelList(string astrSessionID, int aintTaskID) {
            object[] results = this.Invoke("HotelList", new object[] {
                        astrSessionID,
                        aintTaskID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void HotelListAsync(string astrSessionID, int aintTaskID) {
            this.HotelListAsync(astrSessionID, aintTaskID, null);
        }
        
        /// <remarks/>
        public void HotelListAsync(string astrSessionID, int aintTaskID, object userState) {
            if ((this.HotelListOperationCompleted == null)) {
                this.HotelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHotelListOperationCompleted);
            }
            this.InvokeAsync("HotelList", new object[] {
                        astrSessionID,
                        aintTaskID}, this.HotelListOperationCompleted, userState);
        }
        
        private void OnHotelListOperationCompleted(object arg) {
            if ((this.HotelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HotelListCompleted(this, new HotelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/GetSelectedHotel" +
            "", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSelectedHotel(string astrSessionID, int aintTaskID) {
            object[] results = this.Invoke("GetSelectedHotel", new object[] {
                        astrSessionID,
                        aintTaskID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSelectedHotelAsync(string astrSessionID, int aintTaskID) {
            this.GetSelectedHotelAsync(astrSessionID, aintTaskID, null);
        }
        
        /// <remarks/>
        public void GetSelectedHotelAsync(string astrSessionID, int aintTaskID, object userState) {
            if ((this.GetSelectedHotelOperationCompleted == null)) {
                this.GetSelectedHotelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSelectedHotelOperationCompleted);
            }
            this.InvokeAsync("GetSelectedHotel", new object[] {
                        astrSessionID,
                        aintTaskID}, this.GetSelectedHotelOperationCompleted, userState);
        }
        
        private void OnGetSelectedHotelOperationCompleted(object arg) {
            if ((this.GetSelectedHotelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSelectedHotelCompleted(this, new GetSelectedHotelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/HotelListAllStat" +
            "uses", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet HotelListAllStatuses() {
            object[] results = this.Invoke("HotelListAllStatuses", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void HotelListAllStatusesAsync() {
            this.HotelListAllStatusesAsync(null);
        }
        
        /// <remarks/>
        public void HotelListAllStatusesAsync(object userState) {
            if ((this.HotelListAllStatusesOperationCompleted == null)) {
                this.HotelListAllStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHotelListAllStatusesOperationCompleted);
            }
            this.InvokeAsync("HotelListAllStatuses", new object[0], this.HotelListAllStatusesOperationCompleted, userState);
        }
        
        private void OnHotelListAllStatusesOperationCompleted(object arg) {
            if ((this.HotelListAllStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HotelListAllStatusesCompleted(this, new HotelListAllStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/HotelIsValid", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HotelIsValid(string astrSessionID, int aintTaskID, int aintFacilityID) {
            object[] results = this.Invoke("HotelIsValid", new object[] {
                        astrSessionID,
                        aintTaskID,
                        aintFacilityID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HotelIsValidAsync(string astrSessionID, int aintTaskID, int aintFacilityID) {
            this.HotelIsValidAsync(astrSessionID, aintTaskID, aintFacilityID, null);
        }
        
        /// <remarks/>
        public void HotelIsValidAsync(string astrSessionID, int aintTaskID, int aintFacilityID, object userState) {
            if ((this.HotelIsValidOperationCompleted == null)) {
                this.HotelIsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHotelIsValidOperationCompleted);
            }
            this.InvokeAsync("HotelIsValid", new object[] {
                        astrSessionID,
                        aintTaskID,
                        aintFacilityID}, this.HotelIsValidOperationCompleted, userState);
        }
        
        private void OnHotelIsValidOperationCompleted(object arg) {
            if ((this.HotelIsValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HotelIsValidCompleted(this, new HotelIsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/GroupList", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GroupList(string astrSessionID) {
            object[] results = this.Invoke("GroupList", new object[] {
                        astrSessionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GroupListAsync(string astrSessionID) {
            this.GroupListAsync(astrSessionID, null);
        }
        
        /// <remarks/>
        public void GroupListAsync(string astrSessionID, object userState) {
            if ((this.GroupListOperationCompleted == null)) {
                this.GroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupListOperationCompleted);
            }
            this.InvokeAsync("GroupList", new object[] {
                        astrSessionID}, this.GroupListOperationCompleted, userState);
        }
        
        private void OnGroupListOperationCompleted(object arg) {
            if ((this.GroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupListCompleted(this, new GroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/GroupHotelList", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GroupHotelList(string astrSessionID, int aintGroupID) {
            object[] results = this.Invoke("GroupHotelList", new object[] {
                        astrSessionID,
                        aintGroupID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GroupHotelListAsync(string astrSessionID, int aintGroupID) {
            this.GroupHotelListAsync(astrSessionID, aintGroupID, null);
        }
        
        /// <remarks/>
        public void GroupHotelListAsync(string astrSessionID, int aintGroupID, object userState) {
            if ((this.GroupHotelListOperationCompleted == null)) {
                this.GroupHotelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupHotelListOperationCompleted);
            }
            this.InvokeAsync("GroupHotelList", new object[] {
                        astrSessionID,
                        aintGroupID}, this.GroupHotelListOperationCompleted, userState);
        }
        
        private void OnGroupHotelListOperationCompleted(object arg) {
            if ((this.GroupHotelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupHotelListCompleted(this, new GroupHotelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/BrandMgtTypeComb" +
            "inationsByUser", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BrandMgtTypeCombinationsByUser(string astrSessionID, int aintTaskID) {
            object[] results = this.Invoke("BrandMgtTypeCombinationsByUser", new object[] {
                        astrSessionID,
                        aintTaskID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BrandMgtTypeCombinationsByUserAsync(string astrSessionID, int aintTaskID) {
            this.BrandMgtTypeCombinationsByUserAsync(astrSessionID, aintTaskID, null);
        }
        
        /// <remarks/>
        public void BrandMgtTypeCombinationsByUserAsync(string astrSessionID, int aintTaskID, object userState) {
            if ((this.BrandMgtTypeCombinationsByUserOperationCompleted == null)) {
                this.BrandMgtTypeCombinationsByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBrandMgtTypeCombinationsByUserOperationCompleted);
            }
            this.InvokeAsync("BrandMgtTypeCombinationsByUser", new object[] {
                        astrSessionID,
                        aintTaskID}, this.BrandMgtTypeCombinationsByUserOperationCompleted, userState);
        }
        
        private void OnBrandMgtTypeCombinationsByUserOperationCompleted(object arg) {
            if ((this.BrandMgtTypeCombinationsByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BrandMgtTypeCombinationsByUserCompleted(this, new BrandMgtTypeCombinationsByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/GetSecAppList", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSecAppList(int aintUserNumber) {
            object[] results = this.Invoke("GetSecAppList", new object[] {
                        aintUserNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecAppListAsync(int aintUserNumber) {
            this.GetSecAppListAsync(aintUserNumber, null);
        }
        
        /// <remarks/>
        public void GetSecAppListAsync(int aintUserNumber, object userState) {
            if ((this.GetSecAppListOperationCompleted == null)) {
                this.GetSecAppListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecAppListOperationCompleted);
            }
            this.InvokeAsync("GetSecAppList", new object[] {
                        aintUserNumber}, this.GetSecAppListOperationCompleted, userState);
        }
        
        private void OnGetSecAppListOperationCompleted(object arg) {
            if ((this.GetSecAppListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecAppListCompleted(this, new GetSecAppListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/VerifyAppAccess", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet VerifyAppAccess(int aintUserNumber, int aintTaskID) {
            object[] results = this.Invoke("VerifyAppAccess", new object[] {
                        aintUserNumber,
                        aintTaskID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAppAccessAsync(int aintUserNumber, int aintTaskID) {
            this.VerifyAppAccessAsync(aintUserNumber, aintTaskID, null);
        }
        
        /// <remarks/>
        public void VerifyAppAccessAsync(int aintUserNumber, int aintTaskID, object userState) {
            if ((this.VerifyAppAccessOperationCompleted == null)) {
                this.VerifyAppAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyAppAccessOperationCompleted);
            }
            this.InvokeAsync("VerifyAppAccess", new object[] {
                        aintUserNumber,
                        aintTaskID}, this.VerifyAppAccessOperationCompleted, userState);
        }
        
        private void OnVerifyAppAccessOperationCompleted(object arg) {
            if ((this.VerifyAppAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyAppAccessCompleted(this, new VerifyAppAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Hilton.EnterprisePortal.Services.Security/SecurityService/AllUsersByTaskId" +
            "", RequestNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", ResponseNamespace="http://Hilton.EnterprisePortal.Services.Security/SecurityService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AllUsersByTaskId(int aintTaskID) {
            object[] results = this.Invoke("AllUsersByTaskId", new object[] {
                        aintTaskID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AllUsersByTaskIdAsync(int aintTaskID) {
            this.AllUsersByTaskIdAsync(aintTaskID, null);
        }
        
        /// <remarks/>
        public void AllUsersByTaskIdAsync(int aintTaskID, object userState) {
            if ((this.AllUsersByTaskIdOperationCompleted == null)) {
                this.AllUsersByTaskIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllUsersByTaskIdOperationCompleted);
            }
            this.InvokeAsync("AllUsersByTaskId", new object[] {
                        aintTaskID}, this.AllUsersByTaskIdOperationCompleted, userState);
        }
        
        private void OnAllUsersByTaskIdOperationCompleted(object arg) {
            if ((this.AllUsersByTaskIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllUsersByTaskIdCompleted(this, new AllUsersByTaskIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateSessionWithSessionDataCompletedEventHandler(object sender, CreateSessionWithSessionDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSessionWithSessionDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSessionWithSessionDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SessionGetValueCompletedEventHandler(object sender, SessionGetValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SessionGetValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SessionGetValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SessionSetValueCompletedEventHandler(object sender, SessionSetValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SessionSetValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SessionSetValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HotelListCompletedEventHandler(object sender, HotelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HotelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HotelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSelectedHotelCompletedEventHandler(object sender, GetSelectedHotelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSelectedHotelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSelectedHotelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HotelListAllStatusesCompletedEventHandler(object sender, HotelListAllStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HotelListAllStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HotelListAllStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HotelIsValidCompletedEventHandler(object sender, HotelIsValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HotelIsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HotelIsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupListCompletedEventHandler(object sender, GroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupHotelListCompletedEventHandler(object sender, GroupHotelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupHotelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupHotelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void BrandMgtTypeCombinationsByUserCompletedEventHandler(object sender, BrandMgtTypeCombinationsByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BrandMgtTypeCombinationsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BrandMgtTypeCombinationsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSecAppListCompletedEventHandler(object sender, GetSecAppListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecAppListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecAppListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void VerifyAppAccessCompletedEventHandler(object sender, VerifyAppAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyAppAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyAppAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllUsersByTaskIdCompletedEventHandler(object sender, AllUsersByTaskIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllUsersByTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllUsersByTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591